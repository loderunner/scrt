name: Build scrt

on:
  push:
    branches:
      - 'main'
    tags-ignore:
      - '*'
  pull_request:
    branches:
      - '**'

jobs:
  build_docker_e2e_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Save public key to file
        run: 'echo "${{ secrets.SCRT_ID_RSA_PUB }}" > scrt_id_rsa.pub'
      - name: Build Git test container
        uses: docker/build-push-action@v3
        with:
          file: .github/docker/Dockerfile_git+openssh
          context: .
          tags: ghcr.io/${{ github.repository_owner }}/scrt-git-test:${{ github.sha }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Checkout
        uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45.2

  test:
    runs-on: ubuntu-latest
    permissions: {}
    needs:
      - lint
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Test
        run: go test -race -covermode=atomic -coverprofile=coverage.out ./...
      - name: Install gcov2lcov
        run: go install github.com/jandelgado/gcov2lcov@latest
      - name: Convert coverage.out to coverage.lcov
        run: gcov2lcov -infile coverage.out -outfile coverage.lcov
      - name: Coveralls
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

  e2e:
    runs-on: ubuntu-latest
    permissions:
      packages: read
    services:
      minio:
        # Use Bitnami image here because default minio image runs the executable
        # and GitHub actions won't let us pass args to docker create so we can't
        # change the entrypoint
        image: bitnami/minio
        options: --name=minio
        ports:
          - 9000:9000
      git_openssh:
        image: ghcr.io/${{ github.repository_owner }}/scrt-git-test:${{ github.sha }}
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        options: '--env PUBLIC_KEY_FILE="/config/scrt_id_rsa.pub" --env USER_NAME=scrt'
        ports:
          - 22222:2222
    needs:
      - lint
      - build_docker_e2e_image
    steps:
      # Prepare MinIO
      - name: Create test bucket
        run: docker exec minio mkdir -p /data/test-bucket
      # Prepare Git
      - name: Get git container SSH public key
        id: git_ssh_key
        run: |
          sleep 3
          echo ::set-output name=known_host::$(ssh-keyscan -p 22222 -t ecdsa 127.0.0.1)
      - name: Add private SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SCRT_ID_RSA }}
          name: scrt_id_rsa
          known_hosts: ${{ steps.git_ssh_key.outputs.known_host }}
          config: |
            Host scrt-git-test
              HostName 127.0.0.1
              Port 22222
              User scrt
              IdentitiesOnly yes
              IdentityFile /home/runner/.ssh/scrt_id_rsa
      - name: Output SSH status for debug purposes
        run: |
          cat /home/runner/.ssh/config
          cat /home/runner/.ssh/known_hosts
          cat /home/runner/.ssh/scrt_id_rsa
      - name: Start SSH Agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SCRT_ID_RSA }}
      # Run tests
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Run tests
        env:
          SCRT_TEST_E2E: y
          SCRT_TEST_E2E_S3_ENDPOINT_URL: http://127.0.0.1:9000
          SCRT_TEST_E2E_S3_REGION: us-east-1
          SCRT_TEST_E2E_GIT_REPOSITORY_URL: scrt@scrt-git-test:repos/scrt-test.git
          SCRT_TEST_E2E_GIT_BRANCH: main
          AWS_ACCESS_KEY_ID: minio
          AWS_SECRET_ACCESS_KEY: miniosecret
        run: go test ./e2e

  build:
    runs-on: ubuntu-latest
    permissions: {}
    needs:
      - lint
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Build
        run: go build -v .
