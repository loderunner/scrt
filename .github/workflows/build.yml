name: Build scrt

on:
  push:
    branches:
      - "*"
    tags-ignore:
      - "*"
  pull_request:
    branches:
      - "main"

jobs:
  lint:
    runs-on: ubuntu-latest
    container: golangci/golangci-lint:v1.39-alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Run linters
        run: golangci-lint run

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Test
        run: go test -race -v -covermode=atomic -coverprofile=coverage.out ./...
      - name: Convert coverage.out to coverage.lcov
        uses: jandelgado/gcov2lcov-action@v1.0.6
      - name: Coveralls
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov

  e2e:
    runs-on: ubuntu-latest
    services:
      minio:
        # Use Bitnami image here because GitHub actions won't let us pass args to docker create
        image: bitnami/minio
        options: --name=minio
        ports:
          - 9000:9000
    needs: lint
    steps:
      - name: Create test bucket
        run: docker exec minio mkdir -p /data/test-bucket
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Test
        env:
          SCRT_TEST_E2E: y
          SCRT_TEST_E2E_S3_ENDPOINT_URL: http://127.0.0.1:9000
          AWS_ACCESS_KEY_ID: minio
          AWS_SECRET_ACCESS_KEY: miniosecret
          AWS_DEFAULT_REGION: us-east-1
        run: go test -v ./e2e

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Build
        run: go build -v .
